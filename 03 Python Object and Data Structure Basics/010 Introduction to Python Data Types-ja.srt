1
00:00:05,490 --> 00:00:09,770
Pythonのオブジェクトとデータ構造の基礎に関するセクションに皆さんを歓迎します。

2
00:00:11,150 --> 00:00:14,900
このコースのこのセクションでは、基本的なデータ型について説明します。

3
00:00:15,730 --> 00:00:17,590
これらはコードの基本的な構築ブロックです。

4
00:00:17,620 --> 00:00:22,420
&nbsp;

5
00:00:22,420 --> 00:00:26,590
&nbsp;

6
00:00:26,590 --> 00:00:28,270
より大きなコードを構築する際には、このセクションで説明するすべての可能なデータ型をすばやく検討し、各セクションについてさらに詳しく説明する講義を行います。

7
00:00:28,270 --> 00:00:30,990
だから、ここに示されているすべての情報を覚えることを心配しないでください。

8
00:00:31,000 --> 00:00:34,930
これは簡単な概要です。このセクションでは、これらのデータ型のそれぞれについて講義を行います。

9
00:00:34,930 --> 00:00:36,400
&nbsp;

10
00:00:37,980 --> 00:00:42,630
したがって、この表では、ここで議論する予定のデータ型は、左側の列にデータ型の名前があります。

11
00:00:42,630 --> 00:00:44,640
&nbsp;

12
00:00:44,640 --> 00:00:46,380
そして、タイプがあります。

13
00:00:46,380 --> 00:00:51,930
つまり、Pythonにはこの名前の内部キーワードがあり、整数全体を浮動小数点にするのではなく、Pythonには短縮されたキーワードがあります。

14
00:00:52,200 --> 00:00:56,950
&nbsp;

15
00:00:57,060 --> 00:01:03,900
それはIのような2番目の列です A. 文字列などの整数SDRの場合

16
00:01:03,900 --> 00:01:07,650
説明列があり、それは単にデータ型の実際の記述であることになります。

17
00:01:07,650 --> 00:01:09,330
だから、すぐにこれらを見てみましょう。

18
00:01:09,360 --> 00:01:14,550
私たちは整数で始まり、3つの300のようなちょうど基本的な整数です。

19
00:01:14,670 --> 00:01:16,380
その後、浮動小数点数があります。

20
00:01:16,470 --> 00:01:20,960
そしてそれらは小数点2の数字です。 3 4。 6百点ゼロ。

21
00:01:21,150 --> 00:01:25,530
また、100ポイントのゼロがあっても、浮動小数点数としてカウントしても小数点があるため整数ではないことに注意してください。

22
00:01:25,530 --> 00:01:28,970
&nbsp;

23
00:01:29,130 --> 00:01:34,080
その後、文字列と文字列が順番に並んでいます。

24
00:01:34,140 --> 00:01:39,600
これらのことをちょっとした言葉と考えることはできますが、文字列の中にある数字だけでなく、外来文字でもかまいません。

25
00:01:39,810 --> 00:01:41,940
&nbsp;

26
00:01:41,940 --> 00:01:46,620
文字列を表す主なものは、二重引用符または一重引用符を持つことです。

27
00:01:46,620 --> 00:01:50,070
ここでは、一重引用符で囲まれたハローと二重引用符Sammyがあることがわかります。

28
00:01:50,070 --> 00:01:53,420
私たちは二重引用符で2000の数字を持っています。

29
00:01:53,520 --> 00:01:54,540
それは文字列を作る。

30
00:01:54,540 --> 00:01:57,550
それは二重引用符で囲まれているので、もはや単なる整数ではありません。

31
00:01:57,780 --> 00:02:01,370
そして、引用符の中に日本語の文字がいくつかあることがわかります。

32
00:02:01,710 --> 00:02:08,190
そして、データ構造に来ると、データ構造は基本的なデータ型とデータオブジェクトに少し特殊化されています。何故なら、それらは実際に何らかの並べ替えやある種のマッピングでデータオブジェクトを保持できるからです。

33
00:02:08,190 --> 00:02:14,370
&nbsp;

34
00:02:14,370 --> 00:02:15,620
&nbsp;

35
00:02:16,110 --> 00:02:19,640
ここではリストがあり、これらはオブジェクトの順序付けられたシーケンスです。

36
00:02:19,680 --> 00:02:24,210
ここでは角括弧とカンマを使用して、文字列helloのような他のオブジェクトのシーケンスを持つことができたことがわかります。

37
00:02:24,210 --> 00:02:27,470
&nbsp;

38
00:02:27,510 --> 00:02:33,220
そして、200ポイントの3つの辞書は、順序付けられたシーケンスを有する代わりに、この場合を除いて他のデータタイプを格納することができる別のデータ構造である。

39
00:02:33,220 --> 00:02:36,940
&nbsp;

40
00:02:37,090 --> 00:02:39,190
順序付けられていないキー値のペアがあります。

41
00:02:39,250 --> 00:02:42,630
辞書の仕組みについてさらに詳しく説明します。

42
00:02:42,730 --> 00:02:48,400
&nbsp;

43
00:02:48,490 --> 00:02:53,890
&nbsp;

44
00:02:53,890 --> 00:02:59,010
しかしここでは、コロンとそれ以上のキーよりもキーがあることがわかります。そして、中括弧で囲まれたリストではなく、辞書であるかぎり中括弧で示されています。コロンとその名前の値はフランキです。

45
00:02:59,140 --> 00:03:04,260
ここでも、タプルを持つ辞書がタプルとも呼ばれることがあり、これらは順序付けられた不変のオブジェクトのシーケンスであるので、辞書について詳しく説明します。

46
00:03:04,260 --> 00:03:08,380
&nbsp;

47
00:03:08,380 --> 00:03:13,570
それらはカッコが付いている以外はリストのように見えますが、すでにシーケンス内にあるオブジェクトを変更することはできません。

48
00:03:13,870 --> 00:03:16,150
&nbsp;

49
00:03:16,150 --> 00:03:17,970
そこで、私たちは不変の手段を議論します。

50
00:03:17,980 --> 00:03:23,320
タプルについて議論するときは、一意のオブジェクトの順序付けられていない集合である集合よりもはるかに詳細です。

51
00:03:23,320 --> 00:03:24,730
&nbsp;

52
00:03:24,730 --> 00:03:27,310
そしてもう一度それについて詳しく説明します。

53
00:03:27,340 --> 00:03:30,040
辞書と少し似ていますが、キー値のペアはありません。

54
00:03:30,040 --> 00:03:33,090
代わりに、それらは順序付けされたコレクション内の一意のオブジェクトです。

55
00:03:33,100 --> 00:03:35,000
したがって、あなたはそのコロンキー値のペアを持っていません。

56
00:03:35,260 --> 00:03:37,410
これについては、後ほど詳しく説明します。

57
00:03:37,630 --> 00:03:43,030
最後に真偽を示す論理値の単なるブール値について説明します。

58
00:03:43,030 --> 00:03:47,120
私たちがどのように大文字Tを持つのか、Pythonには構文の一種が必要であることに注目してください。

59
00:03:47,410 --> 00:03:48,830
つまり、それらはすべて基本的なデータ型です。

60
00:03:48,860 --> 00:03:53,260
&nbsp;

61
00:03:53,260 --> 00:03:57,160
&nbsp;

62
00:03:57,160 --> 00:03:58,690
あなたがこれを理解していない、またはこれを覚えていないと心配しないでください。基本的にこれらのトピックのそれぞれについて、より詳細に講義を行い、どのように使用できるかを示しますあなた自身のコードを書くことができます。

63
00:03:59,520 --> 00:04:00,880
さあ、始めましょう。

64
00:04:00,880 --> 00:04:01,840
私は次の講義でお会いしましょう。
