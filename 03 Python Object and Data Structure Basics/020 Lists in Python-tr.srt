1
00:00:05,740 --> 00:00:06,910
Herkese geri hoşgeldiniz.

2
00:00:06,910 --> 00:00:13,310
Şimdi, python listelerindeki listeleri tartışmaya veya çeşitli nesne türlerini tutabilen dizileri sipariş etmeye başlayalım

3
00:00:13,310 --> 00:00:18,110
ve listedeki nesneleri ayırmak için köşeli parantezler ve virgül kullanın.

4
00:00:18,110 --> 00:00:24,350
Örneğin burada sayıların bir listesini görebiliriz 1 2 3 4 5 ve sadece dizeler dizinleme ve dilimleme desteği

5
00:00:24,350 --> 00:00:29,270
gibi listeler ve bu da iç içe geçmiş olabilir ve onlardan çağrılabilecek çeşitli yararlı

6
00:00:29,270 --> 00:00:30,160
yöntemler içerir.

7
00:00:30,170 --> 00:00:32,740
Bütün bu kavramları bir Jüpiter defterinde keşfedelim.

8
00:00:32,990 --> 00:00:41,330
Listem adı verilen bir değişkeni tanımlayarak başlayalım ve 1'den 3'e kadar sayılara eşit olarak ayarlayacağız.

9
00:00:41,340 --> 00:00:44,480
Böylece burada bir listenin köşeli ayraçlarla tanımlandığını görebiliriz.

10
00:00:44,520 --> 00:00:48,390
Sonra da her nesne türünün virgülle ayrılmış haldedir.

11
00:00:48,390 --> 00:00:53,040
Sadece bir tamsayı listesi oluşturduk, ancak karışık nesne türlerinin bir listesini de yaratmış olabiliriz.

12
00:00:53,040 --> 00:00:56,040
Yani birincisi bir ip olabilirdi.

13
00:00:56,040 --> 00:01:02,730
İkincisi bir numara ya da kayan nokta olabilir ve liste hiç problem yaşamaz, bu yüzden

14
00:01:02,730 --> 00:01:07,890
python listelerinin tutabilecekleri veri tiplerinde çok esnek olduğunu ve tıpkı bir listenin

15
00:01:08,190 --> 00:01:13,320
uzunluğunu kontrol etmek istediğimiz gibi dizesinin uzunluğunu sadece Python'da yerleşik olan LCN

16
00:01:13,320 --> 00:01:19,530
işlevini kullandıktan sonra listemi aktardık ve listedeki kaç öğe veya öğeyi geri döndürüyor.

17
00:01:19,530 --> 00:01:24,440
Yani burada üç öğe dize yüz yirmi üç nokta iki var.

18
00:01:24,450 --> 00:01:29,390
Artık bir dize gibi, çünkü bir liste, sıralı bir dizi öğedir.

19
00:01:29,520 --> 00:01:33,310
İndeksleme ve dilimleme kullanabilirsiniz ve bu sadece bir dize gibi çalışır.

20
00:01:33,300 --> 00:01:34,980
Bu yüzden ne demek istediğimi göstereceğim.

21
00:01:35,130 --> 00:01:46,390
Listemin 1'den 3'e kadar çıktığını söyleyelim demektir.

22
00:01:46,740 --> 00:01:50,070
Ve sonra öğeyi 0 dizinine getirmek istedim.

23
00:01:50,070 --> 00:01:57,130
Yani, ilk listemde şunu söyleyebilirim 0 listemde bunu çalıştırıyorum ve 1 döndü ve indeks

24
00:01:57,140 --> 00:02:00,970
1'den başlayarak sonuna kadar her şeyi kapmak istedim.

25
00:02:01,030 --> 00:02:03,720
İyi dize indeksleme ve dize dilimleme gibi.

26
00:02:03,870 --> 00:02:09,890
Bir kolonu sonuna dek dizmek için hey başlamak demek ve sonra da iki ve üçümüz var demektir.

27
00:02:09,900 --> 00:02:17,620
Yani bu dilimleme ve indeksleme sadece bir dize gibi çalışır ve bunları birlikte bir araya getirebilirsiniz.

28
00:02:17,640 --> 00:02:19,480
Bu yüzden burada görelim.

29
00:02:19,620 --> 00:02:22,770
Şu anda listemde bir iki üç var.

30
00:02:23,040 --> 00:02:35,640
Diyelim ki 4 5 diyelim eşit olan başka bir liste oluşturacağım ve listemi artı diğer listede görebiliyorum

31
00:02:35,640 --> 00:02:39,080
ve yeni bir listeye eklenecek.

32
00:02:39,090 --> 00:02:41,330
Bir iki üç dört beş.

33
00:02:41,340 --> 00:02:43,850
Dikkat edin, aslında bu sonucu kaydediyorum.

34
00:02:43,950 --> 00:02:50,170
Listemi geri çağıracak olsaydım ya da başka bir başka listeyi buradan otomatik tamamlama sekmesini kullanabilir miyim?

35
00:02:50,280 --> 00:02:54,300
Aslında bu iki ayrı listeye sahibim, bunu kaydetmek istiyorsanız, bir

36
00:02:54,810 --> 00:03:02,820
şeye atamam gerekiyor, böylece yeni liste listeme ve başka bir listeye eşit ve şimdi yeni bir liste kontrol edersem bir iki

37
00:03:02,870 --> 00:03:04,710
üç dört ya da beş.

38
00:03:05,140 --> 00:03:05,720
TAMAM.

39
00:03:05,850 --> 00:03:08,100
Yani bunlar dinleyicilerin temelleri.

40
00:03:08,130 --> 00:03:17,620
benzer hissettirmelisiniz, burada bir dizgeden farklı olan şey aslında diziyi değiştirip değiştirebileceğimizdir.

41
00:03:17,620 --> 00:03:22,720
Burada dizinleme dilimleme ve bir dizgeye

42
00:03:22,720 --> 00:03:28,480
Unutmayın, bir dizgenin etrafındaki harfleri değiştirmeye çalışırken, bir listenin bu şekilde bir problem

43
00:03:28,540 --> 00:03:30,140
yaşamamasına izin vermez.

44
00:03:30,160 --> 00:03:34,970
Yeni listeme bakarsam bir iki üç dört beş olur.

45
00:03:35,120 --> 00:03:40,510
Hadi devam edelim ve bu unsurlardan birini değiştirelim, hepsini birden değiştirelim.

46
00:03:40,550 --> 00:03:47,130
Yapabileceğim, 0 numaralı konumdaki yeni listenin tümü büyük harflerle 1'e eşit olduğunu söylüyor.

47
00:03:47,130 --> 00:03:49,160
Şimdi onu değiştirdiğimizden gerçekten emin olalım.

48
00:03:49,210 --> 00:03:58,440
yüzden hepsini kaptığımda ve şimdi yeni listemde bir göz atarsam, bir tamamı iki üç dört beş ederim.

49
00:03:58,450 --> 00:03:59,270
Bu

50
00:03:59,360 --> 00:04:04,320
Bu, aslında listede yer alan öğeleri mutasyona sokabilir veya değiştirebilecek bir yol.

51
00:04:04,380 --> 00:04:07,180
Ve bu, bir dizeden ayıran bir şey.

52
00:04:07,180 --> 00:04:12,100
Aynı zamanda farklı öğe türleri ve ayraçlar ve virgüller tuttuğu gerçeğinin yanısıra.

53
00:04:12,110 --> 00:04:16,090
Böylece tekrar dizeler onları değiştirebilir ve içindeki öğeleri etkiler.

54
00:04:17,290 --> 00:04:22,850
Gerçekleştirmek isteyebileceğiniz diğer ortak işlemler, bir listenin sonuna bir öğe eklemektir.

55
00:04:23,290 --> 00:04:29,830
Ve bunu yapabildiğimiz şekilde, en yeni noktaları söylüyoruz ve burada sekmeye basmak ve sizin için bir

56
00:04:29,830 --> 00:04:32,530
listede bulunan çeşitli yöntemleri görmeniz gerekiyor.

57
00:04:32,530 --> 00:04:39,400
Buraya göstereceğimiz, ekleme yöntemi ve ekleme, bir listenin sonuna yeni bir öğe eklemenize

58
00:04:39,400 --> 00:04:40,720
izin veriyor.

59
00:04:41,050 --> 00:04:48,950
Bu yüzden 6 numaralı eki söyleyeceğim ve okuduğum bu kuyuyu okuduktan sonra, yeni listemden birine bakarsak,

60
00:04:50,420 --> 00:04:54,860
bir tamamı iki üç dört beş, şimdi altı var.

61
00:04:54,860 --> 00:05:01,400
Dolayısıyla bir kalemin listeyi nasıl etkilediğine dikkat edin ve bunu bir yerde etkiliyor diyoruz çünkü

62
00:05:01,400 --> 00:05:06,280
yeni listeyi bunun sonunda bir elemana sahip olacak şekilde kalıcı olarak değiştirir.

63
00:05:06,290 --> 00:05:07,560
Yani bu bir kalem olarak bilinir.

64
00:05:07,580 --> 00:05:10,760
Ve yine, herhangi bir öğeyi bir listenin sonuna yerleştirmenize olanak tanır.

65
00:05:10,760 --> 00:05:12,630
Bir kez daha deneyelim.

66
00:05:12,720 --> 00:05:20,910
Sana bir kalem listemi göndereyim diyelim yedi koşan ls cetveli ve sen listeleneceğim ve hepsini görebiliyorum.

67
00:05:20,910 --> 00:05:22,520
İki üç dört beş altı.

68
00:05:22,560 --> 00:05:25,830
Ve sonra yedi, çünkü burada çok yakınlaştırıldım, bir şeyler kesiyor.

69
00:05:26,010 --> 00:05:30,180
Ancak uzaklaştırmak için daha normal bir şekilde görmeye başlarsanız.

70
00:05:30,180 --> 00:05:30,500
Tamam.

71
00:05:30,540 --> 00:05:32,550
Bu yüzden, bir şeyi listeye nasıl ekleyeceğimizi biliyoruz.

72
00:05:32,550 --> 00:05:34,790
Listeden öğeleri kaldırma hakkında konuşalım.

73
00:05:34,890 --> 00:05:37,590
Bunu yapmak için pop yöntemini kullanabilirsiniz.

74
00:05:37,680 --> 00:05:43,960
Böylece pop aslında bir listenin sonundaki bir öğeyi gösterecektir.

75
00:05:44,000 --> 00:05:45,480
Bununla ne demek istediğini gösterelim.

76
00:05:45,680 --> 00:05:52,200
Açılan ve kapanan metnin, bu yöntem çağrılarının çoğunda ruber gördüğü yeni bir liste söylüyoruz.

77
00:05:52,220 --> 00:05:54,580
Prensin yoksa ve sadece onları çalıştırırsan.

78
00:05:54,710 --> 00:05:55,650
Geri bildirim yapılacak.

79
00:05:55,660 --> 00:05:59,070
Hey, bu en yeni nesnenin içindeki pop işlevi.

80
00:05:59,090 --> 00:06:02,930
Aslında onu aramak istiyorsan, açık ve kapalı parantezlere ihtiyacın var demektir.

81
00:06:02,930 --> 00:06:06,230
Ve daha sonra, yöntemler ve işlevler arasındaki farkları tartışacağız.

82
00:06:06,260 --> 00:06:09,770
Muhtemelen şu terimleri birbirinin yerine kullandığımı duymuşsundur, şimdi bunlarla ilgili daha ayrıntılı

83
00:06:09,770 --> 00:06:11,330
olarak daha ayrıntılı olarak inceleyeceğiz.

84
00:06:11,630 --> 00:06:17,960
Ancak şu anda biz o popu listeledik ve popülasyon 7'den çıktığını gördü ve aslında

85
00:06:17,960 --> 00:06:18,810
da döndü.

86
00:06:20,210 --> 00:06:25,380
Ve eğer yeni listeye baktığımızda artık 7 dizesindeki dizge yok.

87
00:06:25,380 --> 00:06:28,350
Şimdi sadece 6 numaralı dize kadar çıkıyor.

88
00:06:28,350 --> 00:06:31,380
Dolayısıyla aslında bir popun sonucu kaydedildi.

89
00:06:31,440 --> 00:06:42,700
Dolayısıyla, açılan öğenin yeni listeye eşit olduğunu söyleyebiliriz ve bırak pop diyebilirim.

90
00:06:42,830 --> 00:06:47,900
Ve bunu gerçekleştireceğimde, bu pop öğesi şimdi listenin sonundaki

91
00:06:47,900 --> 00:06:48,610
öğedir.

92
00:06:48,740 --> 00:06:56,330
Bu pop öğesini kopyalayıp yapıştırabilirim ve şimdi pop öğesinin olduğunu ve artık listemin bir

93
00:06:56,330 --> 00:06:58,110
parçası olmadığını söylemiştim.

94
00:06:58,160 --> 00:07:03,820
Burada ortaya çıkan ortak bir soru şu ki hey şeyin listenin sonundan kaldırılmasını istemiyorum.

95
00:07:04,010 --> 00:07:10,870
Örneğin belirli bir dizinde kaldırmak istiyorum, örneğin dizin 0'daki tüm karakterleri kaldırmak istiyorum.

96
00:07:11,090 --> 00:07:12,310
Aslında sorun değil.

97
00:07:12,320 --> 00:07:18,870
Söyleyebileceğimiz popa bir dizin pozisyonu gönderebilirsiniz ve siz pop'u listelersiniz ve sonra kaldırmak

98
00:07:18,870 --> 00:07:21,260
istediğiniz şeyin dizin konumunu iletebilirsiniz.

99
00:07:21,270 --> 00:07:25,110
Burada tümünün bir dizin konumu konumu 0 olduğunu görebiliriz.

100
00:07:25,200 --> 00:07:27,300
Yani orada 0 pasör var.

101
00:07:27,420 --> 00:07:27,920
Çalıştır onu.

102
00:07:27,930 --> 00:07:35,750
Şimdi şunu görebiliyoruz ki hepsini birer birer açtık ve şimdi listelerseniz iki üç dört beşimiz var.

103
00:07:36,040 --> 00:07:41,230
Böylece yine pop, verdiğiniz her yerde listeden öğeleri temelde kaldırır.

104
00:07:41,290 --> 00:07:44,260
Varsayılan olarak, dizin konumu negatif 1'dir.

105
00:07:44,290 --> 00:07:45,830
Bir listenin sonudur.

106
00:07:45,910 --> 00:07:53,240
Bu nedenle, ters dizin oluşturma, aynı zamanda dizin için çalışıyormuş gibi, pop ve ek olarak tartışmak istediğiniz

107
00:07:53,240 --> 00:07:59,720
birkaç metodun listenin de işe yarıyor; bu metotlar, kullandığınız yaygın metotların tür ve tersi olacağı

108
00:07:59,720 --> 00:08:00,860
anlamına geliyor.

109
00:08:00,860 --> 00:08:03,040
Bunu yapmak için yeni bir liste oluşturacağım.

110
00:08:03,050 --> 00:08:04,220
Şimdi buraya yakınlaştırınalım.

111
00:08:05,170 --> 00:08:11,170
güzel listeyi okuyacağım ve son listeyi burada birkaç harf göreceğim, ancak giderken

112
00:08:11,170 --> 00:08:13,930
alfabetik sıraya göre sıralamalarını sağlayacağız.

113
00:08:17,270 --> 00:08:18,220
Bu yüzden

114
00:08:18,340 --> 00:08:22,540
Ve biz de sayılar listesini yapacağız, böylece nimblest'in eşit olduğunu söyleyeceğiz.

115
00:08:22,540 --> 00:08:25,650
Ve bunu sadece bir grup demet sıra dışı hale getirelim.

116
00:08:27,270 --> 00:08:28,900
Tamam, bu yüzden iki listemiz var.

117
00:08:28,950 --> 00:08:35,280
Bu listeleri, yapabileceğimiz yere sıralamak için bunlara sort yöntemi denirse, yeni bir liste sıralaması

118
00:08:35,280 --> 00:08:39,680
görebilir ve bunu yapmak için otomatik tamamlama sekmesini kullanabilirsiniz.

119
00:08:39,970 --> 00:08:46,060
Yakın parantezleri açın ve aslında herhangi bir şey döndürmediğinden, bu yer türü özel

120
00:08:46,060 --> 00:08:47,050
bir yöntemdir.

121
00:08:47,110 --> 00:08:49,510
Bunun yerine, sıralamaya başlaması gerekiyor.

122
00:08:49,510 --> 00:08:53,260
Yerinde yeni bir liste, hiçbir şeyi geri getirmediği anlamına gelir.

123
00:08:53,260 --> 00:08:58,090
Bunun yerine yeni bir listeyi tekrar aradığınızda artık alfabetik sıraya göre sıralanmıştır.

124
00:08:58,090 --> 00:09:03,640
ABC X ve bunu yapmak için önemli bir ayrım, çünkü birçok kez yeni başlayanlar bunun gibi

125
00:09:03,640 --> 00:09:04,620
bir şey yapacak.

126
00:09:04,750 --> 00:09:12,380
Oh sıralamalı listemize eşit olduğunuzu söylesinler, bu tür bir listeyi verirsiniz.

127
00:09:12,750 --> 00:09:18,450
Ancak burada olacak olan şey, yerinde gerçekleşen yeni bir liste aslında sizin atamanız için

128
00:09:18,450 --> 00:09:20,320
bir şey getirmediği için gerçekleşecek.

129
00:09:20,340 --> 00:09:25,210
Sıralanan listemi aradığında, hiçbir şeyi geri alamazsın ya da hiçbir şey geri alamazsın.

130
00:09:25,270 --> 00:09:33,360
Ve aslında bunun türünü kontrol edebilirsiniz ve bunun bir kan türü olduğunu söyleyecektir ve ne

131
00:09:33,360 --> 00:09:36,050
tür hiçbir nesne türü değildir.

132
00:09:36,060 --> 00:09:41,640
Aslında Python'da hiçbiri sermayeyi ve burayı fark etmeyen özel bir nesne var ve bu, hiçbir değeri

133
00:09:41,640 --> 00:09:47,460
göstermek için kullanabileceğiniz bir şey değil ve insanların bir yer tutucu olarak tuttuğu bir sürü şey.

134
00:09:47,610 --> 00:09:53,320
Ancak gerçekten ne olduğu bir işlevi ya da aslında hiçbir şeyi döndürmeyen bir yöntemin dönüş değeri.

135
00:09:53,550 --> 00:09:58,140
Bu nedenle, bir şey arayan ve örneğin bunu bulamayabilir veya bulamayabilir işlevler için

136
00:09:58,140 --> 00:10:00,180
ortak bir varsayılan dönüş değeri var.

137
00:10:00,180 --> 00:10:05,280
Bu, burada bu sıralama yöntemini kullanırken gerçekten gerçekleşmekte olduğunu unutmamak için

138
00:10:05,280 --> 00:10:06,480
önemli bir ayrım.

139
00:10:06,510 --> 00:10:10,420
Dolayısıyla, sonucu başka bir şeye yeniden atayamazsınız.

140
00:10:10,440 --> 00:10:19,940
Yapmak zorunda kaldıysanız yapmanız gereken yeni listeyi söylemek ve bunun ardından sıralamalı listemin yeni listeye eşit olduğunu

141
00:10:19,940 --> 00:10:28,380
söylemek ve ardından onu çalıştırdığınızda sıralamaya otomatik tamamlama sekmesini kullanarak sıralamış listemi alabilir ve sıralamalı

142
00:10:28,830 --> 00:10:33,870
listenizi geri alın ve artı tekrar sayı listesini deneyin.

143
00:10:33,870 --> 00:10:37,150
Şu an listede sıralanmamış.

144
00:10:37,200 --> 00:10:44,950
Sort yöntemini çağırırsam ve şimdi tekrar sıralama yaparsam nimblest'i kontrol ederim.

145
00:10:45,000 --> 00:10:45,460
Tamam.

146
00:10:45,690 --> 00:10:49,290
Beklediğiniz gibi listeden ters yöntemi de tartışalım.

147
00:10:49,320 --> 00:10:51,960
Listenizdeki her şeyi tersine çeviriyor.

148
00:10:51,960 --> 00:10:59,680
Yani sadece ters açık yakın baskı bunu çalıştırdığını görüyor ve aynı zamanda bir şey döndürmemesi anlamına geliyor.

149
00:10:59,800 --> 00:11:04,880
Ve listenizin geriye doğru sürümünü aradıklarında 8 4 3 iki 1 var.

150
00:11:04,890 --> 00:11:05,460
Tamam.

151
00:11:05,520 --> 00:11:11,940
Gerçekten listelerin temelleri ve anlaşılması gereken en destek yöntemleri, sıralama yöntemi ve tersi yöntemin

152
00:11:11,940 --> 00:11:14,850
yanı sıra ekleme yöntemi ve pop yöntemi.

153
00:11:14,940 --> 00:11:19,380
Ve dizeler endeksleme ve dilimleme yapabiliyorlardı.

154
00:11:19,380 --> 00:11:26,760
Dolayısıyla, buraya tekrar gelerseniz, bir ender dizinin yanı sıra dilim notasyonunu da bir akran gibi söyleyebiliriz.

155
00:11:26,880 --> 00:11:30,750
Böylece işler dizilerde olduğu gibi çalışmasını beklersiniz.

156
00:11:30,750 --> 00:11:35,450
Burada dikkat edilmesi gereken tek şey dizelerden farklı olarak, bir liste ile birlikte gösterildiğimiz

157
00:11:35,450 --> 00:11:36,590
gibi yeniden atamalar yapabiliyoruz.

158
00:11:36,630 --> 00:11:37,010
TAMAM.

159
00:11:37,080 --> 00:11:38,520
Bir listenin temelleri budur.

160
00:11:38,580 --> 00:11:41,100
Bir sonraki adımda, sözlükleri tartışacağız.

161
00:11:41,100 --> 00:11:42,090
Orada göreceğim.
