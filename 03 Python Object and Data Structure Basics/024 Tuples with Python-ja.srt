1
00:00:05,480 --> 00:00:08,820
こんにちは皆、タプルやカップルについての講義にようこそ。

2
00:00:08,850 --> 00:00:13,720
いくつかの人々はそれらをPythonのタプルで呼びたいと思っていますが、リストに非常に似ています。

3
00:00:13,760 --> 00:00:18,710
しかし、彼らは一つの重要な違いがあり、それは不変性を持っているので、変更できないという不変の意味です。

4
00:00:18,710 --> 00:00:19,820
&nbsp;

5
00:00:19,820 --> 00:00:23,390
そしてそれは、突然変異または変更することができない用語の突然変異に由来する。

6
00:00:23,390 --> 00:00:29,420
そして、基本的には、要素がタプル内のインデックス位置に割り当てられたら、その要素をつかむことができず、リストを持つような別の要素に再割り当てすることはできません。

7
00:00:29,420 --> 00:00:32,690
&nbsp;

8
00:00:32,990 --> 00:00:37,460
また、タプルを作成する方法は、カッコを使用する角カッコを使用する代わりにリストに非常に似ています。

9
00:00:37,460 --> 00:00:38,830
&nbsp;

10
00:00:38,930 --> 00:00:41,650
木星ノートブックでタプルをもう少し調べてみましょう。

11
00:00:41,930 --> 00:00:43,560
さあ、始めましょう。

12
00:00:43,760 --> 00:00:47,650
あなたがLisseについて学んだことに基づいてタプルを使う方法については、かなり直感的なことを望みます。

13
00:00:47,670 --> 00:00:48,650
&nbsp;

14
00:00:48,860 --> 00:00:54,380
私たちは、TがTと等しいと言う題名の本を作成し、次にカッコ内に3つのコメントを書きます。

15
00:00:54,380 --> 00:00:55,980
&nbsp;

16
00:00:56,240 --> 00:01:00,240
そして、私は非常に似ているだろう私のリストを作成するつもりです。

17
00:01:00,290 --> 00:01:02,110
1つのコンマが3つになると言うでしょう。

18
00:01:02,150 --> 00:01:03,460
しかし、角カッコに注意してください。

19
00:01:03,500 --> 00:01:04,300
だからそれはリストです。

20
00:01:04,300 --> 00:01:07,550
そして、組み込み型関数を使ってこれをいつでも確認することができます。

21
00:01:07,550 --> 00:01:10,920
だからタイプTと言うと、それはタプルであることを返します。

22
00:01:11,210 --> 00:01:11,970
そして私が尋ねるならば。

23
00:01:11,990 --> 00:01:15,910
リストを入力して、それがリストであることを返します。

24
00:01:15,980 --> 00:01:16,320
OK。

25
00:01:16,400 --> 00:01:18,980
したがって、リストを持つことができるように、タプルの長さをチェックすることができます。

26
00:01:18,980 --> 00:01:24,530
したがって、Tの長さは3であり、そのリストに1つ2つと3つの要素が3つあるからです。

27
00:01:24,590 --> 00:01:25,570
リストのように。

28
00:01:25,670 --> 00:01:32,040
オブジェクト型を混在させても問題ないので、タプルの内側に文字列を置くことができます。また、スライスとインデックスを使用できるリストのように問題はありません。

29
00:01:32,040 --> 00:01:36,980
&nbsp;

30
00:01:36,990 --> 00:01:39,310
だから私はその文字列を取得したいとしましょう。

31
00:01:39,470 --> 00:01:42,690
私は指数0 1が何であるか教えてください。

32
00:01:42,720 --> 00:01:48,550
私はまた、負の1を行うことができますし、そのタプルの最後の項目のために2を返します。

33
00:01:48,610 --> 00:01:49,230
これまでのところ。

34
00:01:49,230 --> 00:01:51,010
リストに非常に似ています。

35
00:01:51,030 --> 00:01:56,040
タプルのための2つの基本的な組み込みメソッドもあります。それはインデックスメソッドとカウントメソッドです。その例です。

36
00:01:56,350 --> 00:01:57,880
&nbsp;

37
00:01:58,140 --> 00:02:05,280
Cはタプルであり、コンマはカンマBです。

38
00:02:05,600 --> 00:02:10,840
そして、このタプルに文字Hが何回現れたのかを数えたいと考えてみましょう。

39
00:02:10,860 --> 00:02:16,040
私はTをして、次にここでヒットしたタブをクリックすると、カウントまたはインデックスの2つのオプションが表示されます。

40
00:02:16,080 --> 00:02:20,400
すぐにリストの場合よりも、タプルに利用できるメソッドが少ないことに気付くでしょう。

41
00:02:20,430 --> 00:02:26,530
だから私たちは行くつもりとカウントを言うと、我々はAを渡して、それは戻って戻ってくる。

42
00:02:26,530 --> 00:02:29,650
そのタプルで何回aが起きるか。

43
00:02:29,650 --> 00:02:33,710
そして、我々はまた、インデックスを言うことができます。

44
00:02:33,910 --> 00:02:38,840
そしてこれはあなたのタプルに現れる最初の時を返します。

45
00:02:39,070 --> 00:02:43,570
したがって、最初に表示されるインデックスの位置だけが複数回表示される場合は、戻ってくることに注意してください。

46
00:02:43,570 --> 00:02:44,540
&nbsp;

47
00:02:44,620 --> 00:02:47,630
そして、私たちがBのために同じことをすれば。

48
00:02:47,870 --> 00:02:51,770
最初にBが起こるのは、tを見るための指標です。

49
00:02:52,070 --> 00:02:53,920
それはここBです。

50
00:02:54,020 --> 00:02:59,990
後で、forループのようなコントロール・フロー・ロジックを使用して繰り返し要素のすべての位置を取得し、実際にタプルの違いを生み出すようにする方法を学習します。

51
00:03:00,170 --> 00:03:05,230
&nbsp;

52
00:03:05,240 --> 00:03:06,680
それが変異性です。

53
00:03:06,800 --> 00:03:11,780
そして、私は本当にこれがリストとは異なるタプルタプルを作ることであると十分にストレスを感じることはできません。

54
00:03:11,780 --> 00:03:16,710
だから私たちのタプルを今すぐ取得し、作成したリストのリストをチェックしましょう。

55
00:03:16,730 --> 00:03:22,370
私のリストの最初の要素をnewという文字列に再割り当てしましょう。

56
00:03:22,370 --> 00:03:24,530
だから私のリストはそれに問題はない。

57
00:03:24,530 --> 00:03:31,830
それは、タプルで同じことをしようとすると、最初の要素を新しいものに再割り当てし、ここではタイプエラーを言っていないと言います。

58
00:03:31,830 --> 00:03:34,700
&nbsp;

59
00:03:34,780 --> 00:03:37,180
タプルオブジェクトはアイテムの割り当てをサポートしていません。

60
00:03:37,180 --> 00:03:41,020
これは基本的にタプルをリストとは異なるものにしています。

61
00:03:41,030 --> 00:03:45,670
&nbsp;

62
00:03:45,670 --> 00:03:51,460
&nbsp;

63
00:03:51,490 --> 00:03:53,290
今では、タプルが利用可能なメソッドが少なく、リストの柔軟性がなく、あなたがプログラムを始めようとしているときには、正直言って、タプルを使用していないのはなぜでしょうか？タプルを頻繁に使用すること。

64
00:03:53,350 --> 00:03:57,730
あなたがPythonをより快適にし、より高度なプログラマになれば、タプルの利点を見ることができます。また、タプルを使用する主な理由は、プログラム内のオブジェクトを渡しているときです。誤って変更されていないことを確認する必要があります。

65
00:03:57,730 --> 00:04:02,860
&nbsp;

66
00:04:02,860 --> 00:04:08,060
&nbsp;

67
00:04:08,200 --> 00:04:10,960
タプルが本当にすばらしい解決策になるのです。

68
00:04:11,200 --> 00:04:15,400
したがって、データの整合性と呼ばれるものの非常に便利なソースが提供されます。

69
00:04:15,400 --> 00:04:20,560
&nbsp;

70
00:04:20,560 --> 00:04:26,860
&nbsp;

71
00:04:26,860 --> 00:04:28,210
実際にこのような再割り当てを偶然行うことができないという事実は、要素が反転したり、後で大きなコードで再割り当てされないようにするために、本当に便利になるでしょう。

72
00:04:28,390 --> 00:04:33,040
あなたのツールキットにこれを残しておき、後で私たちがタプルをもう一度引き出して使用できるようにして、今のところそれを輝かせるようにしておきましょう。

73
00:04:33,040 --> 00:04:35,400
&nbsp;

74
00:04:35,410 --> 00:04:40,600
それは不変性を持っていることを覚えておいてください。そして、大括弧の代わりにかっこを使う以外は、本当にリストに似ています。

75
00:04:40,630 --> 00:04:41,970
&nbsp;

76
00:04:42,230 --> 00:04:42,670
OK。

77
00:04:42,910 --> 00:04:44,320
それは今のところタプルのためです。

78
00:04:44,320 --> 00:04:48,970
次に、基本的なファイル入出力を行う方法を説明します。
