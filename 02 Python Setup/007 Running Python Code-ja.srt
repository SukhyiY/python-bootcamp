1
00:00:05,720 --> 00:00:06,940
皆を歓迎します。

2
00:00:06,950 --> 00:00:12,340
ここまでで、コマンドラインの基本について学び、Pythonをコンピュータにインストールしました。

3
00:00:12,350 --> 00:00:17,130
実際にはじめてPythonコードを実行してみましょう。

4
00:00:17,240 --> 00:00:21,470
Pythonコードを実行できるいくつかの異なる方法と、Python用の環境を開発するためのさまざまなオプションについて議論したいと思います。

5
00:00:21,470 --> 00:00:24,570
&nbsp;

6
00:00:24,800 --> 00:00:26,660
そして、3つの主要なタイプの環境があります。

7
00:00:26,690 --> 00:00:31,220
私が環境を意味するのは、実際にPythonコードをタイプすることです。

8
00:00:31,370 --> 00:00:36,300
3つのオプションは、統合開発環境を表すテキストエディタのフルIDです。

9
00:00:36,410 --> 00:00:38,780
そして、本の環境はありません。

10
00:00:38,780 --> 00:00:40,760
それでは、テキストエディタから始めましょう。

11
00:00:40,760 --> 00:00:46,340
テキストエディタはテキストファイルの一般的な編集者に過ぎず、テキストファイルと思考PIスクリプトを開くことができる一般的な形式よりも設計されています。

12
00:00:46,340 --> 00:00:49,760
&nbsp;

13
00:00:49,790 --> 00:00:52,910
H timlファイルをjavascript用のJaspalにします。

14
00:00:52,910 --> 00:00:58,280
さまざまな種類のファイルを開くことができ、それらを編集したり、プラグインやアドオンを使用してカスタマイズすることもできます。

15
00:00:58,280 --> 00:00:59,760
&nbsp;

16
00:00:59,900 --> 00:01:05,840
そして、それらの一般的な形式のため、実際にはPythonだけを念頭に置いて設計されていません。

17
00:01:05,840 --> 00:01:11,100
ですから、PythonのオートコンプリートやPythonのマニュアルを自動的に探し出すなど、Python固有の機能を少し犠牲にするつもりです。

18
00:01:11,120 --> 00:01:16,310
&nbsp;

19
00:01:16,310 --> 00:01:19,790
これらは通常、テキストエディタには直接含まれません。

20
00:01:19,820 --> 00:01:24,370
代わりに、それらをプラグインまたはテキストエディタ用のその他のアドオンでダウンロードする必要があります。

21
00:01:24,380 --> 00:01:26,370
そこにたくさんのプラグインがあることを覚えておいてください。

22
00:01:26,510 --> 00:01:28,620
そして、Pythonはそのような普及したプログラミング言語です。

23
00:01:28,730 --> 00:01:33,950
あなたが作業しているテキストエディタのために既に作成されているプラ​​グインを見つけることができます。

24
00:01:33,950 --> 00:01:34,500
&nbsp;

25
00:01:34,700 --> 00:01:40,160
&nbsp;

26
00:01:40,160 --> 00:01:45,620
また、市場で最も人気のあるテキストエディタは崇高なテキストとアダムであり、それらは両方とも技術的に自由です。崇高なテキストは無制限の無償ライセンスではありません。

27
00:01:45,620 --> 00:01:50,760
Adamは完全に無料でオープンソースのHubのオープンソースのテキストエディタです。

28
00:01:50,900 --> 00:01:55,610
この講義では、Sublime Textをダウンロードし、PythonスクリプトをSublime

29
00:01:55,640 --> 00:01:57,010
Textで実行する方法を紹介します。

30
00:01:57,050 --> 00:02:01,940
だから、あなたが会社で働いている場合は特に、テキストエディタや他の本当に人気のあるオプションは、完全に統合された開発環境です。

31
00:02:01,940 --> 00:02:04,640
&nbsp;

32
00:02:04,940 --> 00:02:10,030
そして、これらは、Pythonとそのより大きいプログラムのユースケースのために特別に設計された皮脂環境です。

33
00:02:10,040 --> 00:02:11,000
&nbsp;

34
00:02:11,000 --> 00:02:13,760
私が大きいとは、ファイルサイズが大きいということです。

35
00:02:13,880 --> 00:02:18,830
それらの前のテキストエディタは、実際には非常に軽量なプログラムであり、プラグインをもっと使いやすくするために、ますます多くを追加することになります。

36
00:02:18,830 --> 00:02:21,930
&nbsp;

37
00:02:21,980 --> 00:02:23,530
彼らはすでにすべてを持っています。

38
00:02:23,750 --> 00:02:29,030
だから彼らはより大きなプログラムを持っていて、それはIDなので、実際に開発者のチームか、その背後にある会社が、新しい機能を環境に追加するために支払われていることを意味します。

39
00:02:29,030 --> 00:02:33,620
&nbsp;

40
00:02:33,620 --> 00:02:38,810
WebフレームワークやWeb開発のためにもっと多くの機能を備えているかもしれません。

41
00:02:39,110 --> 00:02:44,990
そのため、通常はプロ版とコミュニティ版のみがコミュニティのみが無料となり、より多くの機能を備えたバージョンでは、Gengel

42
00:02:44,990 --> 00:02:47,880
&nbsp;

43
00:02:47,980 --> 00:02:53,300
&nbsp;

44
00:02:53,300 --> 00:02:58,160
&nbsp;

45
00:02:58,160 --> 00:03:01,720
コミュニケーションは無料ですが、これについてのプロはPython用に特別に設計されたものです。Pythonコードを手助けする追加機能がたくさんありますが、少し大きめに膨らんでいます。あなたのワークフロースタイルはです。

46
00:03:01,850 --> 00:03:08,140
このアプローチが気に入っているのであれば、Pythonの最も人気のあるアイデアはおそらく円グラフです。

47
00:03:08,150 --> 00:03:09,630
それは間違いなく最大のものです。

48
00:03:09,650 --> 00:03:11,720
そして、スパイダーも人気があります。

49
00:03:11,720 --> 00:03:16,160
スパイダーはmatlabからPythonに入ってくる人には本当に人気があります。

50
00:03:16,160 --> 00:03:20,170
最後に、ノートブック環境とノートブック環境について説明します。

51
00:03:20,240 --> 00:03:23,540
私たちがこのコースの大半に使用する予定の環境です。

52
00:03:23,570 --> 00:03:29,240
その後、ノートブックから離れ、より大きなスクリプトに移行しますが、まず始めにノートを取りに行きます。

53
00:03:29,240 --> 00:03:30,260
&nbsp;

54
00:03:30,260 --> 00:03:33,410
私の意見では、彼らは本当に学習のために素晴らしいです。

55
00:03:33,560 --> 00:03:38,270
&nbsp;

56
00:03:38,270 --> 00:03:43,340
そして、ここでの主な点は、入力コードとコードの出力を隣り合わせで見ることができ、複数の入力と出力をすべて1つの素敵なノートブックで見ることができることです。

57
00:03:43,460 --> 00:03:48,530
これは、ノートブックがセルと呼ばれるコードブロックを使用するためです。

58
00:03:48,620 --> 00:03:54,200
&nbsp;

59
00:03:54,200 --> 00:03:58,760
&nbsp;

60
00:03:58,760 --> 00:04:03,470
&nbsp;

61
00:04:03,470 --> 00:04:05,120
そのため、コードを別のセルに分割し、個々のセルを実行してコードを実行すると、より大きなスクリプトを開発するテキストエディタや開発環境でのアプローチとは異なる出力をすぐに見ることができますまずコマンドラインでそのスクリプトを実行します。

62
00:04:05,210 --> 00:04:09,540
お互いにやりとりする必要があるコードのほうが大きいときは、本当に素晴らしいことです。

63
00:04:09,680 --> 00:04:13,670
&nbsp;

64
00:04:13,670 --> 00:04:18,230
しかし、ちょうど始まったばかりのときにすぐに何かを入力して出力を見ることができるようにしたいのですが、ノートブック環境がノートブック環境を差別化することが本当に素晴らしいのは、インラインマークダウンノートあなた自身が異なる音符を書くことができるので、普通のテキストだけがノートに印を付けて意味します。

65
00:04:18,230 --> 00:04:23,810
&nbsp;

66
00:04:23,930 --> 00:04:28,040
&nbsp;

67
00:04:28,100 --> 00:04:32,880
そして実際に私たちがこのコースに提供するノートブックは、あなたのために多くの説明文を持っています。

68
00:04:32,900 --> 00:04:37,760
あなたは本質的に、このコースを通過するビデオと一緒に本を手に入れます。また、画像化されたビデオやその他多くのものをサポートします。

69
00:04:37,760 --> 00:04:41,190
&nbsp;

70
00:04:41,270 --> 00:04:46,160
また、これらの余分なものをすべてサポートしているため、実際には独自の特殊なファイル形式があり、これはパイスクリプトではありません。

71
00:04:46,160 --> 00:04:48,060
&nbsp;

72
00:04:48,110 --> 00:04:53,030
そのため、通常、コンピュータ上でパイスクリプトが表示された場合はダブルクリックすることができます。ノートブックはこの余分なものをすべてサポートできるため、何らかのテキストエディタが自動的にパイスクリプトを開きます。

73
00:04:53,030 --> 00:04:59,180
&nbsp;

74
00:04:59,330 --> 00:05:00,660
&nbsp;

75
00:05:00,710 --> 00:05:08,150
彼らは拡張IPYであり、Pythonのノートブックのために立っている独自のノートブック形式を持っています、そして、その特別な形式のためにノートブックファイルを実際にダブルクリックすることができます。

76
00:05:08,150 --> 00:05:11,740
&nbsp;

77
00:05:11,780 --> 00:05:14,900
Jupiterノートブックランチャーを使用して起動する必要があります。

78
00:05:15,050 --> 00:05:20,760
&nbsp;

79
00:05:20,760 --> 00:05:25,260
&nbsp;

80
00:05:25,320 --> 00:05:30,330
したがって、ノートブックはかなり人気があり、普及しているためにほとんどの場合、Pythonにとって唯一のノートブック環境ですが、データサイエンスや機械学習の分野ではますます人気が高まっています。出力。

81
00:05:30,510 --> 00:05:32,900
だから私たちは最初にそれを使って学習を始めます。

82
00:05:33,150 --> 00:05:37,680
しかし、ここでの大部分は、開発環境は実際には非常に個人的な選択であり、実際にはあなたの個人的な好みに大きく依存しているということです。

83
00:05:37,680 --> 00:05:40,040
&nbsp;

84
00:05:40,050 --> 00:05:44,760
ですから、Pythonはあなたの最初の言語ではなく、すでにサブラインテキストエディタを使用していたのでしょうか、それともすでに仕事でpite

85
00:05:44,760 --> 00:05:49,410
termを使用していて、そこにプロ版があり、それらの開発環境を使いたい場合は、そうする。

86
00:05:49,410 --> 00:05:52,630
&nbsp;

87
00:05:52,650 --> 00:05:56,610
私たちが示すすべてのコードは、あなたが選んだ開発環境で動作します。

88
00:05:56,640 --> 00:06:01,170
実際にあなたがこの講義を見るのが好きな開発環境を選んだら、私たちはメモをIPY形式で提供します。ファイルをHTML形式で簡単に変換したり、HTML形式でダウンロードすることができます。あなたが使っている環境の

89
00:06:01,170 --> 00:06:07,880
&nbsp;

90
00:06:07,890 --> 00:06:14,650
&nbsp;

91
00:06:14,800 --> 00:06:15,130
OK。

92
00:06:15,150 --> 00:06:17,360
では、Pythonコードを実行する方法を見てみましょう。

93
00:06:17,550 --> 00:06:19,150
私たちはまず編集者から始めます。

94
00:06:19,170 --> 00:06:23,160
そこで、崇高なテキストエディタをダウンロードし、シンプルなポストスクリプトを作成してコマンドラインを実行する方法を紹介します。

95
00:06:23,220 --> 00:06:24,990
&nbsp;

96
00:06:25,020 --> 00:06:28,210
次に、木星ノートブックの同じコードを実行する方法を示します。

97
00:06:28,470 --> 00:06:34,470
それでは、最初にテキストエディタをダウンロードするために必要なことはすべて最初に必要なので、Sublime

98
00:06:34,470 --> 00:06:36,560
Textのドットコムを見てみましょう。

99
00:06:36,660 --> 00:06:36,990
大丈夫。

100
00:06:36,990 --> 00:06:39,570
ここで私たちは崇高なテキストドットコムです。

101
00:06:39,630 --> 00:06:43,920
そして、通常、それはあなたが行っている技術的なWillオペレーティングシステムのすべてであり、OSのLinuxまたはWindows用のダウンロードと言う小さなボタンがあります。

102
00:06:43,920 --> 00:06:47,720
&nbsp;

103
00:06:47,730 --> 00:06:52,620
これは非常にシンプルなテキストエディタで、おそらく世界で最も人気のあるテキストエディタです。

104
00:06:52,980 --> 00:06:55,560
そしてそれは本当に面白い価格体系を持っています。

105
00:06:55,560 --> 00:07:01,530
それは技術的には無料ではありませんが、購入するためにアップグレードする準備ができているかどうかを尋ねながら、少しずつポップアップする無制限の無料試用版を無料で提供します。

106
00:07:01,530 --> 00:07:06,220
&nbsp;

107
00:07:06,240 --> 00:07:11,990
だから、それは技術的には無料ではありませんが、それはあなたの人生の残りの期間無制限の無料試用を持っています。

108
00:07:12,030 --> 00:07:15,970
それはちょうどあなたに完全なライセンスを購入するように尋ねる小さなポップアップを持っています。

109
00:07:16,080 --> 00:07:22,350
ダウンロードするにはここをクリックし、オペレーティングシステムのダウンロードを選択するか、OS X

110
00:07:22,400 --> 00:07:24,830
Windowsの場合は64ビットまたはLinuxのいずれかを選択します。

111
00:07:24,840 --> 00:07:29,220
だからあなたがするべきことは、典型的には、ホームページに行き、それからあなたのためにテキストをダウンロードしてください。

112
00:07:29,220 --> 00:07:30,940
&nbsp;

113
00:07:31,090 --> 00:07:34,900
ダウンロードしたら、崇高なテキストエディタを開きます。

114
00:07:35,680 --> 00:07:41,380
サブラインテキストをダウンロードしてインストールしたら、あなたのコンピュータでサブライムテキストを検索できるはずです。

115
00:07:41,470 --> 00:07:42,250
&nbsp;

116
00:07:42,310 --> 00:07:42,900
クリックして。

117
00:07:43,030 --> 00:07:46,440
それを開くと、このようになります。

118
00:07:46,570 --> 00:07:53,510
次に、私たちがやろうとしていることは、実際にはPythonコードをいくつかタイプし、それをドットPIスクリプトとして保存することです。

119
00:07:53,550 --> 00:07:55,480
印刷してください。

120
00:07:55,530 --> 00:08:03,910
&nbsp;

121
00:08:03,910 --> 00:08:11,500
オープンカッコと閉じカッコとその後の一重引用符や二重引用符でhello

122
00:08:11,500 --> 00:08:18,460
worldこれが最初のPythonスクリプトになります。次に[ファイルを名前を付けて保存]を選択します。ここで気付いた場合は、このフォントのすべてが同じ色ですので、崇高なテキストエディタはこれがPythonスクリプトであることを実際には認識しません。

123
00:08:18,460 --> 00:08:21,700
&nbsp;

124
00:08:21,820 --> 00:08:24,330
私たちがしたいことは、それを保存することです。

125
00:08:24,520 --> 00:08:29,670
そして、私たちはこのファイルを私の例と呼ぶつもりです。

126
00:08:31,650 --> 00:08:37,170
また、たくさんの拡張子を持つすべてのファイルをクリックすると気付くでしょう。

127
00:08:37,170 --> 00:08:40,870
これをPythonファイルとして保存することにします。

128
00:08:40,950 --> 00:08:44,330
だから私の例をpythonファイルとして保存すると言うでしょう。

129
00:08:44,400 --> 00:08:51,740
もう1つの選択肢は、すべてのファイルを選択し、私の例とあなた自身が正しいと言うことです。

130
00:08:51,830 --> 00:08:52,460
PI。

131
00:08:52,740 --> 00:08:54,720
どちらの方法でも問題ありません。

132
00:08:54,720 --> 00:08:57,530
それを保存して、それがドットPIファイルであることを確認してください。

133
00:08:57,570 --> 00:09:03,390
ヒットセーブを実行すると、サブラインのテキストエディタは、それがPythonスクリプトファイルであることを理解しており、これを読むのに役立つシンタックスハイライトが実行されています。

134
00:09:03,540 --> 00:09:07,020
&nbsp;

135
00:09:07,020 --> 00:09:08,180
印刷は機能です。

136
00:09:08,220 --> 00:09:13,350
worldは文字列であり、私たちはそれについてたくさんのことを学んでいきます。後であなたの練習では一般的にPythonを使って、このスクリプトを実際に実行する方法を見ていきましょう。

137
00:09:13,350 --> 00:09:18,450
Hello

138
00:09:18,450 --> 00:09:22,560
コマンドラインでデスクトップの意味にそれを保存したことを忘れないでください。

139
00:09:22,650 --> 00:09:27,420
性的なアップIファイルを実行できるように、ディレクトリをデスクトップに変更する必要があります。

140
00:09:27,420 --> 00:09:31,440
あなたのコマンドラインを開いてください。

141
00:09:31,500 --> 00:09:34,200
私はWindows上にいるので、コマンドプロンプトを開きます。

142
00:09:34,230 --> 00:09:41,820
Mac

143
00:09:41,940 --> 00:09:52,420
OSやLinuxで端末を開く場合は、ディレクトリを実際のデスクトップに変更するか、ファイルタイプのCDで停止してデスクトップをデスクトップに変更してから、デスクトップに移動する必要がありますできることは、Pythonのスペースを入力して、あなたのファイルの名前を入力し始めることです。

144
00:09:52,960 --> 00:10:00,190
&nbsp;

145
00:10:00,190 --> 00:10:00,970
&nbsp;

146
00:10:00,970 --> 00:10:07,120
私の場合、それはパイとあなたが正しい位置にあったことを自分自身に証明するために、あなたはタブを押すことができるはずであり、それは自動的に完成するでしょう。

147
00:10:07,120 --> 00:10:09,730
&nbsp;

148
00:10:09,730 --> 00:10:10,870
だからここでPythonを言う。

149
00:10:10,870 --> 00:10:17,620
私の例はPIですが、これはコマンドラインでドットPIスクリプトを実行する方法です。

150
00:10:17,740 --> 00:10:18,910
それからあなたは見ることができるはずです。

151
00:10:19,000 --> 00:10:20,630
こんにちは世界。

152
00:10:20,710 --> 00:10:26,950
これで、テキストエディタでPythonスクリプトを作成し、コマンドラインでそのスクリプトを実行しました。

153
00:10:26,950 --> 00:10:27,470
&nbsp;

154
00:10:28,280 --> 00:10:34,200
まあ、コマンドラインでpythonだけを入力することもできます。

155
00:10:34,340 --> 00:10:41,510
そして、これはPythonへの非常に簡単な直接接続です。コマンドラインでPythonコードを直接入力することができます。

156
00:10:41,510 --> 00:10:42,560
&nbsp;

157
00:10:42,590 --> 00:10:47,390
一度に1行にすぎないので、実際にはトレーニング中にこれを使用することはありません。最終的には、コードごとに複数の行を書くことを使用して学習します。

158
00:10:47,390 --> 00:10:51,880
&nbsp;

159
00:10:51,890 --> 00:10:56,050
あなたはそれをチェックアウトすることもできます。

160
00:10:58,650 --> 00:11:01,360
&nbsp;

161
00:11:01,440 --> 00:11:03,410
したがって、基本的には一度に1行になります。

162
00:11:03,540 --> 00:11:10,620
Pythonコードを書くことができます。次に、quits

163
00:11:10,620 --> 00:11:13,370
openおよびcloseのかっこを入力して、Pythonインタプリタを終了します。

164
00:11:13,410 --> 00:11:13,920
大丈夫。

165
00:11:14,160 --> 00:11:18,470
そこで、コマンドラインでPythonスクリプトを実際に実行する方法を学びました。

166
00:11:18,480 --> 00:11:23,250
次に、Jupiterのノートブック環境を調べ、それがどのように機能するかを見てみましょう。

167
00:11:23,310 --> 00:11:30,660
私たちはAnaconda Navigatorにアクセスして、コンピューターでAnacondaナビゲーターを検索します。

168
00:11:30,700 --> 00:11:36,910
8 8 9またはその他一連の数字。

169
00:11:36,910 --> 00:11:43,540
それを開いて、それを済ませたら、起動ボタンをクリックするとJupiterのノートブックを起動します。ブラウザーが自動的にlocalhostコロンまで開くことがわかります。8 8

170
00:11:43,720 --> 00:11:50,080
8 8または8

171
00:11:50,080 --> 00:11:56,470
Jupiterノートブックはブラウザの内部で動作しますが、インターネット接続は必要ありません。

172
00:11:56,530 --> 00:11:57,580
&nbsp;

173
00:11:57,610 --> 00:11:59,590
すべてがローカルで行われています。

174
00:11:59,620 --> 00:12:04,070
Jupiterと他のサーバーとの間にインターネット接続はありません。

175
00:12:04,090 --> 00:12:10,570
あなたがプログラミングするための便利なグラフィカルなインターフェースとして、あなたのブラウザで開いて操作するだけです。

176
00:12:10,570 --> 00:12:12,110
&nbsp;

177
00:12:12,130 --> 00:12:18,200
だからあなたがコンピュータ上のすべてのファイルを見ることができることに気付くでしょう、木星のノートブックを起動します。

178
00:12:18,200 --> 00:12:24,320
&nbsp;

179
00:12:24,380 --> 00:12:30,530
&nbsp;

180
00:12:30,530 --> 00:12:31,460
たとえば、ここでデスクトップフォルダをクリックすると、前の例で作成したポストスクリプトと、実際にPIファイルを追加して編集できる、より深く不透明なシステムを使用した例が見えます。

181
00:12:31,460 --> 00:12:34,530
たとえば、別のprintステートメントをここに追加することができます。

182
00:12:35,490 --> 00:12:42,260
この変更を知って保存しておくと、ファイルや他のものをダウンロードしたり名前を変更したりできますが、このようなテキスト編集にはJupiterを使用しません。

183
00:12:42,500 --> 00:12:47,240
&nbsp;

184
00:12:47,270 --> 00:12:49,440
おそらく、サブラインテキストエディタを使用する方が良いでしょう。

185
00:12:49,490 --> 00:12:51,680
しかし、再びそれは個人的な好みです。

186
00:12:51,680 --> 00:12:56,570
JupiterとJupiterを実際に使っているのはノートブックシステムなので、ここをクリックして、新しいノートブックの下にPython

187
00:12:56,570 --> 00:13:01,310
3があるはずです。

188
00:13:01,460 --> 00:13:04,030
時には根やその他のことが言われることもあります。

189
00:13:04,040 --> 00:13:05,940
しかし、それがノートブックの下で言うことをクリックしてください。

190
00:13:05,990 --> 00:13:08,740
通常、Python 3と言います。

191
00:13:08,960 --> 00:13:11,530
そして、新しいノートブックを始めたばかりです。

192
00:13:11,630 --> 00:13:15,200
では、これが実際に何かを簡単に概観しましょう。

193
00:13:15,200 --> 00:13:16,460
ここにはタイトルがありません。

194
00:13:16,460 --> 00:13:19,840
これは、作成したばかりのノートブックに実際にタイトルが付いていないためです。

195
00:13:19,970 --> 00:13:25,610
&nbsp;

196
00:13:25,610 --> 00:13:32,060
&nbsp;

197
00:13:32,060 --> 00:13:34,330
ここでもう一度このタブをクリックすると、名前のないIPYとBファイルが作成されていることに気付くでしょう。PythonノートブックファイルJupiterノートブックはPythonノートブックと呼ばれていましたので、ファイル拡張子名を保持していました。

198
00:13:34,560 --> 00:13:40,700
&nbsp;

199
00:13:40,740 --> 00:13:49,200
この名前を変更したい場合は、このタブ選択タイトルに戻り、ノートブックに新しい名前を付けて、最初のノートブックを入力して、ノートブックと実際のファイルの名前を変更するだけです。

200
00:13:49,260 --> 00:13:50,510
&nbsp;

201
00:13:50,520 --> 00:13:55,560
私の最初のノートブックには、pythonのノートブック拡張機能が表示されます。

202
00:13:55,560 --> 00:14:02,670
このノートブックに戻ると、ノートブックはセルベースのシステムを使用して、セルにコードを書くことを意味します。

203
00:14:02,790 --> 00:14:05,520
セルを実行し、実際の出力を確認します。

204
00:14:05,520 --> 00:14:07,050
セルのすぐ下。

205
00:14:07,050 --> 00:14:13,530
ですから、セルタイプの印刷の中で実行したり、単純なprint文を試してみましょう。しかし、close printはHelloを見ています。

206
00:14:14,110 --> 00:14:14,790
&nbsp;

207
00:14:14,940 --> 00:14:19,690
そしてあなたは、木星が引用や括弧などのあなたのために何かを自動補完することに気づきます。

208
00:14:19,860 --> 00:14:21,660
そして、細胞を動かすことができます。

209
00:14:21,830 --> 00:14:26,730
ここで実行ボタンをクリックすると、セルが実行され、そのすぐ下に出力が表示されます。

210
00:14:26,730 --> 00:14:27,780
&nbsp;

211
00:14:27,780 --> 00:14:32,520
これは、Pythonについて学び始めたばかりの人々にとっては、コードを持っているために出力を直接見ることができるので、間違いを素早く反復し修正するための素晴らしいシステムです。

212
00:14:32,850 --> 00:14:37,350
&nbsp;

213
00:14:37,410 --> 00:14:41,460
彼らは常にコマンドラインに行きスクリプトを再実行する必要はありません。

214
00:14:41,520 --> 00:14:45,660
これは間違いなく個人的な好みですが、これはPythonを学んでいる人々のためのノートブックの素晴らしい機能です。

215
00:14:45,660 --> 00:14:46,910
&nbsp;

216
00:14:47,190 --> 00:14:52,420
newのように多くのPythonコードを入力することができます。

217
00:14:52,900 --> 00:14:55,070
そして、あなたが自動的に他のセルを作成することに気付きました。例えば、print

218
00:14:55,270 --> 00:15:01,840
そして、あなたがしなければならないたびにその実行ボタンをクリックしたくない場合は、shiftを押してください。そうすれば、セルが再び実行されます。

219
00:15:02,650 --> 00:15:04,400
&nbsp;

220
00:15:04,420 --> 00:15:07,140
それはセルを動かすためにシフト入力します。

221
00:15:07,210 --> 00:15:11,140
あなた自身だけで入力すると、より多くの新しい行が作成されます。

222
00:15:11,170 --> 00:15:13,830
したがって、セルを実行するにはshiftキーを押します。

223
00:15:13,840 --> 00:15:20,350
ヘルプをクリックしてキーボードショートカットをクリックすると、すべてのキーボードショートカットが一覧表示される、その他の便利なホッケーがたくさんあります。

224
00:15:20,350 --> 00:15:22,480
&nbsp;

225
00:15:22,600 --> 00:15:28,240
最も有用なものは後で教えられるでしょうが、いつでもあなた自身でそれを探ることができます。

226
00:15:28,240 --> 00:15:33,730
&nbsp;

227
00:15:33,730 --> 00:15:39,100
&nbsp;

228
00:15:39,100 --> 00:15:40,820
ノートブックシステムで実際にマークダウンテキストを保持できるのは、このブートキャンプ全体で学習しているときにメモを入力するだけでは使用できないコードではない通常のテキストです。

229
00:15:40,850 --> 00:15:45,830
したがって、セルをクリックすると、ここにコードが表示されます。これは、通常のマークダウンセルにしたい場合は、現在のところPythonコードセルであるためです。

230
00:15:45,830 --> 00:15:50,120
&nbsp;

231
00:15:50,240 --> 00:15:53,150
ドロップダウンから選択してください。

232
00:15:53,180 --> 00:15:55,640
そして今、これはもはやコードセルではありません。

233
00:15:55,750 --> 00:15:59,610
それはちょうどそれに通常のテキストを持つだけのセルです。

234
00:15:59,720 --> 00:16:03,570
そして、あなたはそれがもはやセルの正面にこれを持っていないことに気付くでしょう。

235
00:16:03,590 --> 00:16:06,180
それはまたそれが通常のテキストのためのものであることを示しています。

236
00:16:06,410 --> 00:16:14,420
したがって、ここでは理解するのに役立つメモだけを書くことができます。シフトを入力すると、通常のテキストとして表示されます。

237
00:16:14,420 --> 00:16:16,580
&nbsp;

238
00:16:16,580 --> 00:16:21,710
だからもう一度これはもはやコードではなく、それはあなた自身のためのテキストであり、私たちがあなたの訓練を通して提供する多くのノートブックは説明としてテキストをマークしています。

239
00:16:21,710 --> 00:16:25,580
&nbsp;

240
00:16:25,690 --> 00:16:31,580
また、別のコードを記述したい場合は、セルに座って、選択したコードで必要なものを印刷できるようにしてください。

241
00:16:31,580 --> 00:16:35,230
&nbsp;

242
00:16:35,390 --> 00:16:36,600
シフトとタレットはそれを実行します。

243
00:16:36,740 --> 00:16:41,380
そしてそれは、あなたのトレーニングを通して後でノートブックについてもっと話をする、非常に基本的なことです。

244
00:16:41,510 --> 00:16:43,400
しかし、それは本当に基本です。

245
00:16:43,400 --> 00:16:51,020
最後に注意したいのは、このIPYとBのノートブックファイルのこの特別な拡張は、実際にあなたのコンピュータ上でこのファイルをダブルクリックして開くことができないことを意味します。

246
00:16:51,020 --> 00:16:55,910
&nbsp;

247
00:16:55,910 --> 00:16:58,810
だから、私がそのことをとても素早く見せてくれるようにしましょう。

248
00:16:59,000 --> 00:17:04,880
私が私のデスクトップに来たら、私はpiと私がこれをダブルクリックすると実際にそれが持っているどのようなデフォルトプログラムでも開きます。

249
00:17:04,880 --> 00:17:09,080
&nbsp;

250
00:17:09,080 --> 00:17:14,900
通常、崇高なテキストエディタやその他のコンピュータのエディタで、そのpyファイルをダブルクリックして編集し、それらのファイルを操作できます。

251
00:17:14,900 --> 00:17:17,940
&nbsp;

252
00:17:17,960 --> 00:17:24,530
しかし、IPYファイルとBファイルをダブルクリックしようとすると、このファイルをどうやって開くのかを尋ねるメッセージが表示されたり、まったく開いてしまい、たくさんのスクランブルコードが表示されます。

253
00:17:24,530 --> 00:17:29,300
&nbsp;

254
00:17:29,300 --> 00:17:30,110
&nbsp;

255
00:17:30,410 --> 00:17:36,580
&nbsp;

256
00:17:36,590 --> 00:17:42,320
つまり、木星ノートブックシステムを使って特別なノートブックファイルを開くことができるのは、まだJupiterノートブックのAnacondaナビゲータを起動してから、コンピュータ上で実際にそれを見つけてクリックするだけです。

257
00:17:42,320 --> 00:17:44,820
&nbsp;

258
00:17:44,840 --> 00:17:47,980
これはPythonコードを実行するための基本です。

259
00:17:48,200 --> 00:17:49,870
実際にPythonを学ぶ時です。
